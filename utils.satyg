@require: base/fn
@require: gr

@import: algorithms

module Utils : sig
  val apps : ('a -> 'a) list -> 'a -> 'a
  val add-pt : point -> point -> point
end = struct
  open Algorithms
  let apps xs = fold-map Fn.id Fn.compose Fn.id xs
  let add-pt (x1, y1) (x2, y2) = (x1 +' x2, y1 +' y2)
end